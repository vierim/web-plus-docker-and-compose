version: '3'

services:
  backend:
    container_name: backend
    build:
      context: backend
      dockerfile: Dockerfile.dev
    image: backend
    env_file: .env
    restart: always
    ports: 
      - '4000:3000'
    depends_on:
      - postgres
    networks:
      - backend

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    image: frontend
    env_file: .env
    restart: always
    ports:
      - '8081:3000'
    volumes:
      - type: bind
        source: ./frontend/src
        target: /app/src
    networks:
      - frontend
    environment:
      CHOKIDAR_USEPOLLING: "true"

  postgres:
    container_name: postgres
    image: postgres:latest
    env_file: .env
    restart: always
    volumes:
      - postgres_data:/data/postgres
    networks:
      - backend

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      - backend

volumes:
  postgres_data:

networks:
  backend:
  frontend:
